Chinese translated version of Documentation/stable_api_nonsense.txt

If you have any comment or update to the content, please contact the
original document maintainer directly.  However, if you have problem
communicating in English you can also ask the Chinese maintainer for help.
Contact the Chinese maintainer, if this translation is outdated or there
is problem with translation.

Maintainer: Greg Kroah-Hartman <greg@kroah.com>
Chinese maintainer: TripleX Chung <zhongyu@18mail.cn>
---------------------------------------------------------------------
Documentation/stable_api_nonsense.txt 的中文翻

如果想或更新本文的内容，直接系原文档的者。如果使用英文
交流有困的，也可以向中文版者求助。如果本翻更新不及或者翻
存在，系中文版者。

英文版者： Greg Kroah-Hartman <greg@kroah.com>
中文版者： 宇  TripleX Chung <zhongyu@18mail.cn>
中文版翻者： 宇  TripleX Chung <zhongyu@18mail.cn>
中文版校者： 李  Li Yang <leoli@freescale.com>
以下正文
---------------------------------------------------------------------

写作本文档的目的，是了解什Linux既没有二制内核接口，也没有定
的内核接口。里所的内核接口，是指内核里的接口，而不是内核和用空
的接口。内核到用空的接口，是提供用程序使用的系用，系用
在史上几乎没有化，将来也不会有化。我有一些老用程序是在0.9版本
或者更早版本的内核上的，在使用2.6版本内核的Linux布上依然用得很好
。用和用程序作者可以将个接口看成是定的。


行要
--------

也以自己想要定的内核接口，但是不清楚要的上不是它。需
要的其是定的程序，而只有将程序放到公版内核的源代里，
才有可能到个目的。而且做有很多其它好，正是因些好使得
Linux能成壮，定，成熟的操作系，也是最始Linux的原因。


入
-----

只有那些写程序的“怪人”才会担心内核接口的改，广大用来，既
看不到内核接口，也不需要去心它。

首先，我不打算于任何非GPL可的内核的法律，些非GPL可
的程序包括不公源代，藏源代，二制或者是用源代包装，或者
是其它任何形式的不能以GPL可公源代的程序。如果有法律，咨
律，我只是一个程序，所以我只打算探技（不是小看法律，
法律很，并且需要一直注）。

既然只技，我就有了下面个主：二制内核接口和定的内核源
代接口。个是互相的，我先解决掉二制接口的。


二制内核接口
--------------
假如我有一个定的内核源代接口，那自然而然的，我就有了定的
二制接口，是的？。我看看于Linux内核的几点事：
    - 取决于所用的C器的版本，不同的内核数据里的体的方
式会有差，代中不同函数的表形式也不一（函数是不是被inline取
决于器行）。不同的函数的表形式并不重要，但是数据内部的
方式很。
    - 取决于内核的配置，不同的会内核的很多西生改：
      - 同一个体可能包含不同的成量
      - 有的函数可能根本不会被（比如的候没有SMP支持
，一些函数就会被定成空函数）。
      - 内核使用的内存会以不同的方式，取决于不同的内核配置
。
    - Linux可以在很多的不同体系的理器上行。在某个体系上
好的二制程序，不可能在外一个体系上正的行。

于一个特定的内核，足些条件并不，使用同一个C器和同的内核配
置来程序模就可以了。于一个特定Linux布的特定版本提
供程序，是完全可以足需求的。但是如果要不同布的不同版本都
布一个程序，就需要在个布上用不同的内核置参数都一次内核，
直跟梦一。而且要注意到，个Linux布提供不同的Linux内核，
些内核都不同的硬件型行了化（有很多不同的理器，有不同
的内核置）。所以布一次程序，都需要提供很多不同版本的内核
模。

相信我，如果真的要采取布方式，一定会慢慢掉，我很久以前就有
深刻的教...


定的内核源代接口
--------------------

如果有人不将他的内核程序，放入公版内核的源代，而又想程序
一直保持在最新的内核中可用，那个将会得没完没了。
 内核是持而且快奏的，从来都不会慢下来。内核人在当前接口中
找到bug，或者找到更好的方式。一旦些，他就很快会去修改当前的
接口。修改接口意味着，函数名可能会改，体可能被充或者，函数
的参数也可能生改。一旦接口被修改，内核中使用些接口的地方需要同
修正，才能保所有的西工作。

一个例子，内核的USB程序接口在USB子系的整个生命周期中，至少
了三次重写。些重写解决以下：
    - 把数据流从同模式改成非同模式，个改少了一些程序的
度，提高了所有USB程序的吐率，几乎所有的USB都能以最大
速率工作了。
    - 修改了USB核心代中USB分配数据包内存的方式，所有的都
需要提供更多的参数USB核心，以修正了很多已被在案的死。

和一些封源代的操作系形成明的比，在那些操作系上，不得不
外的旧的USB接口。致了一个可能性，新的者依然会不小心使用旧的
接口，以不恰当的方式写代，而影到操作系的定性。
 在上面的例子中，所有的者都同意些重要的改，在的情况下修改代
价很低。如果Linux保持一个定的内核源代接口，那就得建一个新的接口
；旧的，有的接口必一直，Linux USB者来外的工作。既然
所有的Linux USB的作者都是利用自己的工作，那要求他去做毫无意
的免外工作，是不可能的。
 安全Linux来十分重要。一个安全被，就会在短内得到修
正。在很多情况下，将致Linux内核中的一些接口被重写，以从根本上避免安
全。一旦接口被重写，所有使用些接口的程序，必同得到修正，
以定安全已得到修并且不可能在未来有同的安全。如果内核
内部接口不允改，那就不可能修的安全，也不可能的
安全以后不会生。
者一直在清理内核接口。如果一个接口没有人在使用了，它就会被除。
可以保内核尽可能的小，而且所有潜在的接口都会得到尽可能完整的
（没有人使用的接口是不可能得到良好的的）。


要做什
-------

如果写了一个Linux内核，但是它不在Linux源代里，作一个
者，怎做？个布的个版本提供一个二制，那直是一个
梦，要跟上永于化之中的内核接口，也是一件辛苦活。
很，的入内核源代（要得我在的是以GPL可行
的，如果的代不符合GPL，那祝好，只能自己解决个了，
个吸血鬼<把Andrew和Linus吸血鬼的定接到里>）。当的代加入
公版内核源代之后，如果一个内核接口改，的会直接被修改接口的
那个人修改。保的永都可以通，并且一直工作，几乎不需要
做什事情。

把放到内核源代里会有很多的好：
    - 的量会提升，而成本（原始作者来）会下降。
    - 其他人会添加新特性。
    - 其他人会找到中的bug并修。
    - 其他人会在中找到性能化的机会。
    - 当外部的接口的改需要修改程序的候，其他人会修改程序
。
    - 不需要系任何行商，个会自的随着所有的Linux布一起
布。

和的操作系相比，Linux更多不同的提供成的，而且能在更多不
同体系的理器上支持些。个考的模式，必然是不了
的 :)

-------------
感 Randy Dunlap, Andrew Morton, David Brownell, Hanna Linder,
Robert Love, and Nishanth Aravamudan 于本文档早期版本的和建。

英文版者： Greg Kroah-Hartman <greg@kroah.com>
